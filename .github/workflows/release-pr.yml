name: Create release PR

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/release-pr.yml'
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/release-pr.yml'
  schedule:
    - cron: '05 10 * * *'  # 10:05am UTC everyday

jobs:
  update-changelog:
    runs-on: ubuntu-24.04
    container: ghcr.io/${{ github.repository_owner }}/os:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Update CHANGELOG.md
        run: |
          ./build_files/setup-repo.sh
          ./build_files/check-update.sh

      - name: Check if CHANGELOG.md changed
        id: check
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q '^CHANGELOG.md$'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload CHANGELOG.md
        uses: actions/upload-artifact@v4
        if: steps.check.outputs.changed == 'true'
        with:
          name: changelog
          path: CHANGELOG.md

  create-release-pr:
    needs: update-changelog
    runs-on: ubuntu-24.04
    if: needs.update-changelog.outputs.changed == 'true'

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - name: Download CHANGELOG.md
        uses: actions/download-artifact@v4
        with:
          name: changelog

      - name: Get latest real version and date from CHANGELOG.md
        id: changelog
        run: |
          LINE=$(grep -m 1 -E '^## \[[0-9]+\.[0-9]+\.[0-9]+\]' CHANGELOG.md)
          VERSION=$(echo "$LINE" | grep -Po '(?<=## \[)[0-9]+\.[0-9]+\.[0-9]+')
          DATE=$(echo "$LINE" | grep -Po '(?<=\] - )[0-9]{4}-[0-9]{2}-[0-9]{2}')
          if [ -z "$VERSION" ] || [ -z "$DATE" ]; then
            echo "No valid version/date found in CHANGELOG.md"
            exit 1
          fi
          echo "version=v$VERSION" >> $GITHUB_OUTPUT
          echo "date=$DATE" >> $GITHUB_OUTPUT

      - name: Extract changelog section for this version
        id: extract_notes
        run: |
          VERSION="${{ steps.changelog.outputs.version }}"
          VERSION_NO_V=${VERSION#v}
          START_LINE=$(grep -nE "^## \[${VERSION_NO_V}\]" CHANGELOG.md | cut -d: -f1)
          NEXT_LINE=$(tail -n +$((START_LINE+1)) CHANGELOG.md | grep -nE "^## \[[0-9]+\.[0-9]+\.[0-9]+\]" | head -n 1 | cut -d: -f1)
          if [ -z "$NEXT_LINE" ]; then
            END_LINE=$(wc -l < CHANGELOG.md)
          else
            END_LINE=$((START_LINE + NEXT_LINE - 2))
          fi
          sed -n "${START_LINE},${END_LINE}p" CHANGELOG.md > notes.md
          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: tagcheck
        run: |
          if git rev-parse "refs/tags/${{ steps.changelog.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit if version already released
        if: steps.tagcheck.outputs.exists == 'true'
        run: |
          echo "Version ${{ steps.changelog.outputs.version }} already released."
          exit 0

      - name: Configure Git for GitHub Actions bot
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Close existing release PRs
        run: |
          gh pr list --state open --search "head:release/" --json number | jq -r '.[].number' | while read pr; do
            gh pr close "$pr" --delete-branch
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and push CHANGELOG.md
        run: |
          git checkout -b release/${{ steps.changelog.outputs.version }}
          git add CHANGELOG.md
          git commit -m "chore: release ${{ steps.changelog.outputs.version }}"
          git push origin release/${{ steps.changelog.outputs.version }} -f
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR with changelog notes
        run: |
          gh pr create \
            --title "Release ${{ steps.changelog.outputs.version }} - ${{ steps.changelog.outputs.date }}" \
            --body "${{ steps.extract_notes.outputs.body }}" \
            --base main \
            --head release/${{ steps.changelog.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
